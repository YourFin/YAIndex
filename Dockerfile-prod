FROM ruby:2.6.4

ENV RAILS_ON_DOCKER=yes

# Install nodejs 11
RUN curl -sL https://deb.nodesource.com/setup_11.x | bash - && \
  apt-get install -y nodejs

# Install yarn
RUN npm install --global yarn

#Install nginx, envsubst, postgres client, tooling for sshing in
RUN apt-get install -y nginx gettext-base postgresql-client openssh-server python vim

# Allow heroku remote debugging
RUN rm /bin/sh \
  && ln -s /bin/bash /bin/sh \
  && mkdir -p /app/.profile.d
ADD ./bin/heroku-exec.sh /app/.profile.d/heroku-exec.sh

ENV APP_PATH=/app
ENV RAILS_ENV=production
ENV RAILS_SERVE_STATIC_FILES true

# Install gems
RUN mkdir -p $APP_PATH
COPY Gemfile ${APP_PATH}/Gemfile
COPY Gemfile.lock ${APP_PATH}/Gemfile.lock
WORKDIR ${APP_PATH}
ENV GEM_PATH=/usr/local/bundle
RUN bundle install --without development test

COPY package.json ${APP_PATH}/package.json
COPY yarn.lock ${APP_PATH}/yarn.lock
RUN yarn install --check-files

# Configure nginx
RUN useradd -ms /bin/false nginx
# Explicitly remove default nginx.conf
RUN rm /etc/nginx/nginx.conf

# Copy entrypoint
COPY bin/entrypoint.sh /usr/bin
RUN chmod +x /usr/bin/entrypoint.sh

# Copy application files
COPY . ${APP_PATH}

# Build application files
# Hopefull get around elm's annoying proclivity to not download everything
RUN bash -c "yarn run elm make /app/app/javascript/Main.elm --output=/dev/null 2>/dev/null || true"
RUN bash -c "yarn run elm make /app/app/javascript/Main.elm --output=/dev/null 2>/dev/null || true"
RUN bash -c "yarn run elm make /app/app/javascript/Main.elm --output=/dev/null 2>/dev/null || true"
RUN bash -c "yarn run elm make /app/app/javascript/Main.elm --output=/dev/null 2>/dev/null || true"
RUN SECRET_KEY_BASE=`bin/rake secret` FILES_DIRECTORY="/app/test_files/" bundle exec rake assets:precompile

ENTRYPOINT ["entrypoint.sh"]
EXPOSE 80

CMD bash /app/.profile.d/heroku-exec.sh && ./bin/run-prod.sh
